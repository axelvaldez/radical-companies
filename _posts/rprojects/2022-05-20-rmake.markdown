---
layout:   post
title:    "rMAKE"
subtitle: "Making Books Like We Make Software"
authors:  "Matt Perez"
image:    "icon-rmedia.svg"
---

<div style="display:none;">
 <p>Writing a book is mostly a one-person writing exercise. And that is a problem.</p>
</div>

<div class="_citation">
 <p>A book is no longer be a book, but parallel variations on a theme. A spectrum of perspectives, built like software is done these days.</p>
 <p>This made me think of how Aztecs used to keep track of histories.</p>
 <p id="_signature">Dr Marysol Ortega<a href="#en01"><sup id="bm01">&hairsp;&nabla;&hairsp;</sup></a></p>
</div>

<h1>Why <span class="_paradigm">rMAKE</span>?</h1>
 <p>Writing a book is mostly a one-person writing exercise and that&rsquo;s a problem. Using today&rsquo;s tools, if the book has more than one author, they may have discussions, critiques, suggestions, etc., but, after all is said and done, the actual writing is done by one of them.</p>
 <p>Another problem is assigning authorship and ownership. A handful of people get listed as co-authors and they also get <em>equal</em> co-ownership of the work. Others who have contributed significantly to the book may end up as &ldquo;advisors&rdquo; or &ldquo;my good friend&rdquo; but not considered a co-author. Still others may get mentioned in the acknowledgements section or in footnotes. In acadamic circles, the latest is to list everybody in a lab, sometimes, hundreds of them. Unfortunately, none of this really comes close to creating a book as a team, similarly to the way we make software.</p>
 <p>The intent of <span class="_paradigm">rMAKE</span> is to make it possible for many people to contribute to a book and get consistent authorship and ownership. What would have been a laborious process for books written with a quill pen or a typewriter, it is a piece of cake using basic modern technology.</p>

<h1>But You Already Can, Can&rsquo;t You?</h1>
 <p>My first thought was that any of the various <em>Git</em><a href="#en02"><sup id="bm02">&hairsp;&nabla;&hairsp;</sup></a> platforms, MediaWiki,<a href="#en03"><sup id="bm03">&hairsp;&nabla;&hairsp;</sup></a> or even Google Docs could be it.</p>
 <div class="_center">
  <table class="_h2table">
   <tr id="_background">
    <td></td>
    <th><em>Git</em></th>
   </tr>
   <tr>
    <th>PROs</th>
    <td>
     <ul>
      <li><em>Git</em> is a very popular software source control<a href="#en04"><sup id="bm04">&hairsp;&nabla;&hairsp;</sup></a> system. It allows software developers to work as peers, in parallel.</li>
      <li>The published code lives in the project <strong>trunk</strong>. Any developer can read that code at any time.</li>
      <li>Several developers can work on features or new versions of the code in parallel, in separate branches. Each is persistent and fully rendered.</li>
      <li>Whenever I want to merge the code in my flow into the trunk, I create a pull request for the trunk&rsquo;s admin. We&rsquo;d have a discussion about my branch in the pull request and if everything lines up, the code in my branch is merged into the trunk.</li>
      <li>If anybody wants to, they can fork the code and create their own version of the software.</li>
     </ul>
    </td>
   </tr>
   <tr>
    <th>CONs</th>
    <td>
     <ul>
      <li><em>Git</em> and its many derivatives are not what you&rsquo;d call user friendly for non-developers.</li>
      <li>The <strong>trunk</strong> is the boss and it is the only one that counts (<em>i.e.</em>, gets compiled into production). Branches are ephemeral, second class objects.</li>
     </ul>
    </td>
   </tr>
   <tr id="_background">
    <td></td>
    <th><em>MediaWiki</em></th>
   </tr>
   <tr>
    <th>PROs</th>
    <td>
     <ul>
      <li>This is the wiki engine used by Wikipedia and it is friendly enough for writers. At least those who are used to Wiki Markup.<a href="#en05"><sup id="bm05">&hairsp;&nabla;&hairsp;</sup></a></li>
      <li>It keeps a history of the document where you can see all the edits ever made to a page as well as the discussions between the page editor and other contributors.</li>
      <li>Various writers can work asynchronously (not quite in parallel).</li>
      <li>It is Open Source.</li>
      <li>It has pretty good documentation for developers.<a href="#en06"><sup id="bm06">&hairsp;&nabla;&hairsp;</sup></a></li>
     </ul>
    </td>
   </tr>
   <tr>
    <th>CONs</th>
    <td>
     <ul>
      <li>It only renders the latest version of the document. All changes are kept in the History tab, but the only version rendered in the latest one, with all the accepted changes.</li>
      <li>There&rsquo;s no way to see previous versions, except by reading the History and applying heavy use of your imagination.</li>
     </ul>
    </td>
   </tr>
   <tr id="_background">
    <td></td>
    <th><em>Google Docs</em></th>
   </tr>
   <tr>
    <th>PROs</th>
     <td>
     <ul>
      <li>It has a good WYSIWYG interface. Very intuitive, plenty of undos, etc.</li>
      <li>It supports a very impressive version of collaboration, where different people can work on a document together in real time.</li>
      <li>Authors can see each other&rsquo;s words appearing in the document as they work in parallel, as peers. They can also see each other&rsquo;s gestures (via the cursor).</li>
      <li>It keeps a doc&rsquo;s complete history. You can even name particular versions of a doc to easily recognize them.</li>
     </ul>
    </td>
   </tr>
   <tr>
    <th>CONs</th>
    <td>
     <ul>
      <li>The code is proprietary. It supports a version of JavaScript that you can use to make extensions, but you&rsquo;re SOL if you want to make a major mod to it.</li>
      <li>Only one version is rendered at one time. If you want to work off the version from three days ago, you have to choose it for rendering. But this deprecates the current version. If three people modified the version you&rsquo;re interested in, you can render only one; the others are History.</li>
     </ul>
    </td>
   </tr>
  </table>
 </div>

<h1><span class="_paradigm">rMAKE</span> Is Born</h1>
 <p>In the end, we opted to create a new app we call <span class="_paradigm">rMAKE</span><a href="#en07"><sup id="bm07">&hairsp;&nabla;&hairsp;</sup></a> as an OSS platform that others can extend. There are several OSS editors that we can leverage for our UI and many OSS components and libraries that we can use in the making of <span class="_paradigm">rMAKE</span> (<em>e.g.</em>, diff).</p>

 <div class="_center">

  <table class="_explicitalignment">
   <tr id="_background">
    <td></td>
    <th>No Trunk</th>
   </tr>
   <tr>
    <td>
     <p>In <span class="_paradigm">rMAKE</span> <em>there is no trunk</em>. Instead of trunk and branches, MAKE has flows and every flow is persistent (<em>e.g.</em>, fully rendered). Even if the co-authors agree to merge all their flows into one, the result is just a co-equal flow.</p>
     <p>These flows are fully rendered and at any point in time, a reader would be able to see any. Perhaps one flow is recommended by readers more than the others, but all flows will still be around for readers to explore.</p>
    </td>
   <tr id="_background">
    <td></td>
    <th>Authorship &amp; Ownership</th>
   </tr>
  </table>
 </div>
 <div class="_center">
  <table class="_explicitalignment">
   <tr>
    <td>
     <p>A fragment could be a phrase, sentence, paragraph, and even a word. Every fragment carries authorship <em>and</em> ownership.</p>
     <ul>
      <li>Authorship and ownership can be unknown, marked as TBD. Authorship is usually known, but ownership can be more problematic to discover.</li>
      <li>If ownership is marked as TBD, then anybody, say, PubCo, can <em>claim</em> ownership of a fragment and, assuming that they can prove it, PubCo would then be <em>assigned</em> as owner of the fragment.</li>
      <li>Authorship means that co-authors are responsible for its content.</li>
      <li>Ownership includes the power to decide on fragment merges.</li>
      <li>Ownership does not imply exclusivity and anybody can copy any fragment in a flow at will. As noted, the fragment ownership goes along with it.</li>
      <li>Others can create their own flows with fragments authored by somebody else, say, me. The resulting content would indicate me as a co-author and the person doing the modification as another co-author.</li>
      <li>Using the <span class="_paradigm">RAD Distribution</span> model, revenue from, for example, consumer purchases or licenses, could be distributed to co-owners as a function of their ownership of the complete work.</li>
      <li>RADs account for level of contribution. The original author of the fragment could assign RADs to other co-authors or the whole thing could be automated based on, say, the number of words added.</li>
     </ul>
    </td>
   </tr>
   <tr id="_background">
    <td></td>
    <th>No Permission Needed</th>
   </tr>
   <tr>
    <td>
     <p>Any co-author can copy a flow without explicit permission; in fact, anybody can do that. On the other hand, an author can easily find out every copy of her content ever made (<em>i.e.</em>, even if it is a copy of a copy).</p>
     <p>A co-author could make any and all of her flows unreadable to others. Otherwise, if you can read it, you can copy it.</p>
    </td>
   </tr>
   <tr id="_background">
    <td></td>
    <th>Pull&nbsp;Requests&nbsp;and&nbsp;Merges</th>
   </tr>
   <tr>
    <td>
     <p>A co-author will need the agreement of a flow owner if she wants to have her work merged with his. How that happens depends on a discussion among the people involved.</p>
    </td>
   </tr>
   <tr id="_background">
    <td></td>
    <th>Use Cases</th>
   </tr>
   <tr>
    <td>
     <table>
      <tr>
       <th>1+1 = 2</th>
       <td>
        <ul>
         <li>When the content overlaps, one of us may create a pull request for one or more fragments.</li>
         <li>We discuss the differences, agree on how to align them, and our work gets merged.</li>
         <li>We end up as co-owners of any fragments that were modified by both of us.</li>
        </ul>
       </td>
      </tr>
      <tr>
       <th>2+1 = 3</th>
       <td>
        <ul>
         <li>Another writer joins us and starts to work off the backlog in a separate flow.</li>
         <li>She issues a pull request to merge her fragments into our flow.</li>
         <li>After some discussion, the fragments are merged into one.</li>
         <li>From that point on the flow is owned by all three of us.</li>
        </ul>
       </td>
      </tr>
      <tr>
       <th>2+1 &ne; 1+2</th>
       <td>
        <ul>
         <li>After working on my own flow for a while, I created a pull request for a flow owned by two co-authors.</li>
         <li>He wants to reject it but she wants to accept it.</li>
         <li>She stops contributing to the original flow, forks the content as a new flow, and starts contributing to it.</li>
         <li>The new flow includes the original content co-owned by the extant co-authors, my content, and new content that she and I create.</li>
        </ul>
       </td>
      </tr>
      <tr>
       <th>1+1 = 1</th>
       <td>
        <ul>
         <li>For whatever reason, I slow down or stop working on the project.</li>
         <li>My co-authors keep going strong and create a lot of content for it.</li>
         <li>Other co-authors join.</li>
         <li>That is fine. I continue to own the content I authored and co-own any content that I co-authored.</li>
        </ul>
       </td>
      </tr>
     </table>
    </td>
   </tr>
   <tr id="_background">
    <td></td>
    <th>Flows</th>
   </tr>
   <tr>
    <td>
     <p><em>Flows</em> tie together a number of <em>fragments</em> to make for a coherent reading. Flows are first-class objects, persistent and publishable. For example, assume a book project starts with two authors and ends with many contributors from different authors,</p>
      <div class="_center">
       <img
        src="/assets/img/rmake-flow-1.svg"
        width="70%"
        alt="The image shows two flows. Each flow is made up of four fragments. Fragments 1, 3, and 4 are by author1 and fragment two is by author2. To the right of the orignal flow is another one. This one starts with with a fragment by author1; fragments two is co-authored by author1 and author2; fragment three is coauthored by author2 and author 5; fragment 4 is coauthored by author1, author2, and author4. Presunably, authors 3 and 4 made a contribution and later retracted it.">
      </div>
      <p>For example, these could be the flows in between,</p>
       <div style="text-align:center; ">
       <img
        src="/assets/img/rmake-flows.svg"
        width="70%"
        alt="This image shows six flows. FLow one is made up solo fragments. Fragments 1, 3, and 4 are by author1 and fragment two is by author2. The second flow starts with the same fragment written by author1, fragments 2 and 4 by author 2, and fragment 1 by author2. The third flow starts with the same fragment written by author1, the second fragment is co-written by author1 and author2, the third fragment is still the one written by author3, and the the last fragment written by author2. THe first two fragments of flow four are as before, but this time fragment 3 is written by author 2 and fragment four is co-written by author2 and author5. The first two fragments of flow five and its last fragment are as in flow four but in this flow fragment 3 is written by author5. The last flow illustrated starts with the same fragment written by author1, fragment2 is co-written by ">
       </div>
       <p>For example, maybe @author3 stopped contributing after modifying chapter 3. Other co-authors, however, continue to move the content forward and their changes make @author3&rsquo;s contribution obsolete. Or various co-authors make a few updates to my 4.0 fragment and then I make one last modification.</p>
       <p>There will be the case where one or more co-authors go off in a different direction from the perspective of the other co-authors. In that case, the divergent co-author(s) would start a new flow with the content of the source flow and then add new content to it (<em>i.e.</em>, This is conceptually similar to a fork of an OSS software project). They can create a Linked flow, where the untouched fragments are merely links to the original (<em>i.e.</em>, Linked flows will reflect any and all changes in these fragments),</p>
        <div style="text-align:center; ">
         <img
         src="/assets/img/rmake-new-flow.svg"
         width="70%"
         alt="">
       </div>
       <p>They could, alternatively, create a Copied flow, where every fragment is a static copy of the original fragment. Changes in the original fragments would not be reflected in the new flow.</p>
       <p>Either way, authorship stays with each fragment, whether Linked or Copied. Content is owned by those who author it.</p>
       <p>These flows are first-class objects. They are addressable, persistent, and each can be publishable separately. For example, I could post a URL to one flow (<em>e.g.</em>, 1, 2, 3, 4) and you could publish another flow (<em>e.g.</em>, 1, 2, modified 3, 4). Readers can choose to read one flow or another. Or they can jump from one to another, regardless of the flow they started from.</p>
       <p>Of note, this could cause weird situations. For example, I create a flow about responsible gun ownership. Somebody else may fork it and use the statistics chapter to support reckless gun ownership. In this case, I could end up getting paid from sales of the &ldquo;irresponsible&rdquo; book. At first, I found the thought a bit distressing, but as Doug Kirkpatrick points out,</p>
        <div class="_quotation">
         <p>That might actually be a good thing because it would further empower the responsible writers to keep writing responsibly! And OPEN is kind of a binary thing – something is either open or closed.</p>
         <p>If a statistics book chapter is OPEN, therefore, it is subject to being applied by individuals to arguments with which we may disagree.</p>
         <p>I also think that books aren&rsquo;t just about the writers, they&rsquo;re also about the readers, who have some responsibility to filter the information (including statistics) they read and make self-informed (self-managed!) judgments about the veracity of that information. Statistics aren&rsquo;t always the lovely, objective things we assume them to be (see <em>How to Lie with Statistics</em>.<a href="#en08"><sup id="bm08">&hairsp;&nabla;&hairsp;</sup></a>)</p>
        </div>a
    </td>b
   </tr>c
  </table>d
 </div>e

<h1>Publishing</h1>
 <p>The mythical &ldquo;book deal&rdquo; includes an advance that a publisher pays an author when the book is just an outline. For well-known authors and brand names (<em>e.g.</em>, ex-President Obama), that is still the case. The rest of us get, at best, a percent of sales minus all expenses, including returns,</p>
 <p style="margin-bottom:0; ">In the <span class="_paradigm">rMAKE</span> model, a Publisher could,</p>
  <ul>
   <li>Negotiates a deal around a particular flow.</li>
   <li>Make a deal around all existing flows.</li>
   <li>They could even pay for preventing new flows for a period of time.</li>
  </ul>
 <p>This is ripe for experimentation.</p>
 <p>See rMEDIA<a href="#en09"><sup id="bm09">&hairsp;&nabla;&hairsp;</sup></a> for more info.</p>

<h1 class="_section">Use Modalities</h1>

<h1>Contributions</h1>
 <p>Contributions come in three flavors: suggestions, rewrites, and additions.</p>
 <div class="_center">
  <table class="_h2table">
   <tr id="_background">
    <th>Suggestions</th>
    <td>Typos, word replacements, very short rewrites.</td>
   </tr>
   <tr>
    <td colspan="2" class="_spacer"></td>
   </tr>
   <tr>
    <th>Rewrites</th>
    <td>A significant amount of content is rewritten or re-laid-out dramatically differently.</td>
   </tr>
   <tr>
    <td colspan="2" class="_spacer"></td>
   </tr>
   <tr>
    <th>Additions</th>
    <td>New content is added.</td>
   </tr>
   <tr>
    <td colspan="2" class="_spacer"></td>
   </tr>
  </table>
 </div>
 <p>The different types of contributions must stand out and be visually distincts. Manipulating them must be intuitive (<em>e.g.</em>, as implemented in Google Docs, suggestions can render a document unreadable with many strokes and modification, and comments can overlap suggestions and make them unreachable). It must be straightforward to convert a suggestion to a comment and vice versa.</p>
 <p>Suggestions, rewrites, and additions carry authorship. When accepting any one of these, its authorship comes along with it.</p>

<h1>Roles</h1>
 <h1>Reader</h1>
  <p>Needs to,</p>
  <ul>
   <li>See the content.</li>
   <li>Optionally see a table of contents (collapsible).</li>
   <li>Leave a comment associated with highlighted text.</li>
   <li>Optionally see comments that others have left (collapsible).</li>
   <li>Leave edit suggestions.</li>
   <li>Share content,
    <div style="text-align:center; ">
     <img
      src="/assets/img/rmedia-citation-copy-paste.svg"
      width="70%"
      alt="">
    </div>
    <p>Where the URL points to the highlighted text.</p>
   </li>
   <li>See and follow alternative content. For example, a button labeled &ldquo;Alt Content&rdquo; would jump to the alternative if there&rsquo;s only one or show a pull down list if there's more than one. Or the button could open a side panel to show a short description of each version.</li>
  </ul>
 <h1>Writer</h1>
  <p style="margin-bottom:0; ">Needs to,</p>
  <ul>
   <li>Start in editing mode. It renders the same as reading mode, but it allows editing.</li>
   <li>Leave comments and edits assigned to a user (may be herself).</li>
  </ul>
 <h1>Co-Writers</h1>
  <p style="margin-bottom:0; ">Same as a single writer, but in addition they need to,</p>
  <ul>
   <li>Fork the whole book as a separate flow.</li>
   <li>Fork a particular fragment, be it a section or subsection, a paragraph, a sentence, phrase, or excursus.<a href="#en10"><sup id="bm10">&hairsp;&nabla;&hairsp;</sup></a></li>
   <li>
    <p style="margin-bottom:0; ">Create a Pull Request<a href="#en11"><sup id="bm11">&hairsp;&nabla;&hairsp;</sup></a> to,</p>
    <ol>
     <li>Hold the discussion about a merge.</li>
     <li>Record the final decision (to merge to not merge).</li> 
    </ol>
   </li>
   <li>
    <p style="margin-bottom:0; ">Different versions of the content could invoke separate Pull Requests,</p>
    <ol>
     <li>Yesterday&rsquo;s Pull was rejected because the authors agreed that more work was needed.</li>
     <li>Today's Pull request is accepted for merge after a short discussion that deems the new work as acceptable.</li> 
    </ol>
   </li> 
  </ul>
 <h1>Editor</h1>
  <ul>
   <li>Same as any co-writer.</li>
   <li>All changes go into a separate flow.</li>
   <li>Authors are free to accept some or all of the suggestions.</li>
  </ul>

<h1 class="_section">Other Potential Features</h1>

<h1>Comments and Suggestions</h1>
 <p>(Inspired by Google Docs.)</p>
 <p>Comments and suggested edits enrich a document, particularly when it generates a dialog among co-authors. The end result of a discussion may be that co-authors go off to create their own flows. And that&rsquo;s good.</p>
 <p>When that happens, the new flows will carry a copy of all comments and edits with it. If one author decides to remove some or all comments or reject the edits, then they still exist in the original flows.</p>

<h1>Social Media</h1>
 <p>A la Medium, text can be pre-selected as &ldquo;ready to post.&rdquo; Clicking on that text brings up a, for example, Twitter or LinkedIn post window with the text itself and a URL to the quoted text.</p>
 <p>Also, text can be selected and sent to other Social platforms, including a URL that points back to the text (<em>i.e.</em>, a la Diigo).</p>
 <div style="text-align:center; ">
  <img
   src="/assets/img/rmedia-diff.svg"
   width="70%"
   alt="">
 </div>
<h1>References</h1>
 <p>An <span class="_paradigm">rMAKE</span> reference can include text, URLs, or both, a la Kindle.</p>
 <p>URLs can point to internal targets (<em>e.g.</em>, titles, headers).</p>

<h1>Paper</h1>
 <p>The <span class="_paradigm">rMAKE</span> platform can prepare a flow for traditional paper publication. In particular, the platform will make it easy to convert references and URLs to footnotes or endnotes.</p>

<h1>Advanced Readers</h1>
 <p>Support for Advance Readers, by creating a copy of the text whenever the Advanced Reader makes a comment or a change.</p>

<h1>Search</h1>
 <p>In addition to searching text, support searching Comments, Suggestions, Images, Footnotes and Endnotes.</p>

<h1>Citations</h1>
 <ul>
  <li>Support footnotes and endnotes.</li>
  <li>Support endnotes at the end of a section (e.g., chapter), and endnotes at the end of the book. Any and all of them may appear in a book.</li>
 </ul>

<h1>Image Source, Title</h1>
 <ul>
  <li>Support adding sources to an image, optionally with embedded URLs to its source.</li>
  <li>Support adding titles to an image.</li>
  <li>Support positioning these sources and titles as per the authors specs (<em>e.g.</em>, top, bottom).</li>
 </ul>

<h1>Bookmarks</h1>
 <ul>
  <li>It should be possible to add labels to a bookmark (e.g., &ldquo;Start here&rdquo;).</li>
  <li>Highlighted text yields a bookmark that includes the start and end of the highlighted text. Title, subtitles, and headers always yield a bookmark.</li>
  <li>Clicking on an embedded link would show you where it points to, a la Google Docs or where it is referenced from.</li>
 </ul>

<h1>Templating</h1>
 <ul>
  <li>Authors can create a TEMPLATE.</li>
  <li>A URL to a section in the TEMPLATE actually redirects to a child of the TEMPLATE or, in its absence, to the TEMPLATE itself.</li>
  <li>Changes in the TEMPLATE affect all its children unless a child has explicitly blocked that action.</li>
 </ul>

<h1>Views</h1>
 <ul>
  <li>A View defines how a user, whether reader or writer, sees the content. Some people like to start paragraphs with an indent, but others don&rsquo;t. Some like more or less whitespace after sentences (<em>e.g.</em>, double space, single space). Some like paragraphs adjusted, some like them ragged.</li>
  <li>Views are first class objects and can be combined with any other first class object. For example, a View can be selected by a reader which incorporates her preferences.</li>
  <li>Conceptually, there could be a View for the whole Flow, but another View for a particular module.</li>
  <li>Parameters would include indentation, margins (all or individually as right, left, top, bottom), font family, font size, space after end-of-sentence punctuation (<em>e.g.</em>, n-width, m-width, other size), etc. (I imagine this as a CSS parameter file).</li>
 </ul>

<h1 class="_section">ENDNOTES</h1>
 <div>
  <ol>
   <li id="en01">
    <p class="_list-item">
     AEON.
     <em>How Aztecs Told History</em>.
     &lt;<a href="https://radicals.world/pWo2WK" target="_blank">https://radicals.world/pWo2WK</a>&gt; (alt, &lt;<a href="https://diigo.com/0salwc" target="_blank">https://diigo.com/0salwc</a>&gt;)
     <a class="_uparrow" href="#bm01"><img src="/assets/img/arrow-up-icon.png"></a>
    </p>
   </li>
   <li id="en02">
    <p class="_list-item">
     <em>Git</em>.
     <<a href="https://git-scm.com/" target="_blank">https://git-scm.com/</a>>
     <a class="_uparrow" href="#bm02"><img src="/assets/img/arrow-up-icon.png"></a>
    </p>
   </li>
   <li id="en03">
    <p class="_list-item">
     <em>MediaWiki</em>.
     <<a href="https://www.mediawiki.org/wiki/MediaWiki" target="_blank">https://www.mediawiki.org/wiki/MediaWiki</a>>
     <a class="_uparrow" href="#bm03"><img src="/assets/img/arrow-up-icon.png"></a>
    </p>
   </li>
   <li id="en04">
    <p class="_list-item">
     <em>Source Control System</em>.
     <<a href="https://en.wikipedia.org/wiki/Source_Code_Control_System" target="_blank">https://en.wikipedia.org/wiki/Source_Code_Control_System</a>>
     <a class="_uparrow" href="#bm04"><img src="/assets/img/arrow-up-icon.png"></a>
    </p>
   </li>
   <li id="en05">
    <p class="_list-item">
     For more information, see <em>Markup</em> <<a href="https://radicals.world/59k36j" target="_blank">https://radicals.world/59k36j</a>> (aka, Markdown <<a href="https://radicals.world/Dbg4hm" target="_blank">https://radicals.world/Dbg4hm</a>>).
     <a class="_uparrow" href="#bm05"><img src="/assets/img/arrow-up-icon.png"></a>
    </p>
   </li>
   <li id="en06">
    <p class="_list-item">
     <em>Wikimedia</em> documentation for developers.
     <<a href="https://www.mediawiki.org/wiki/How_to_become_a_MediaWiki_hacker" target="_blank">https://mediawiki.org/$hellip/How_to_become_a_MediaWiki_hacker</a>>
     <a class="_uparrow" href="#bm06"><img src="/assets/img/arrow-up-icon.png"></a>
    </p>
   </li>
   <li id="en07">
    <p class="_list-item">
     An homage to <em>Unix <span style="font-weight:bold;">make</span></em>.
     <a class="_uparrow" href="#bm07"><img src="/assets/img/arrow-up-icon.png"></a>
    </p>
   </li>
   <li id="en08">
    <p class="_list-item">
     <em>How to Lie with Statistics</em>.
     <<a href="https://www.amazon.com/How-Lie-Statistics-Darrell-Huff/dp/0393310728/ref=pd_lpo_sbs_14_img_1?_encoding=UTF8&psc=1&refRID=FKW6Y0VTHKGY7C3EM3YD"  target="_blank">https://www.amazon.com/How-Lie-Statistics&hellip;</a>>
     <a class="_uparrow" href="#bm08"><img src="/assets/img/arrow-up-icon.png"></a>
    </p>
   </li>
   <li id="en09">
    <p class="_list-item">
     See RELATED, below.
     <a class="_uparrow" href="#bm09"><img src="/assets/img/arrow-up-icon.png"></a>
    </p>
   </li>
   <li id="en10">
    <p class="_list-item">
     Definition of &ldquo;excursus&rdquo;.
     <<a href="https://www.google.com/search?q=excursus&oq=excursus" target="_blank">https://www.google.com/search?q=excursus&oq=excursus</a>>
     <a class="_uparrow" href="#bm10"><img src="/assets/img/arrow-up-icon.png"></a>
    </p>
   </li>
   <li id="en11">
    <p class="_list-item">
     Definition of &ldquo;Pull Request&rdquo;.
     <<a href="https://en.wikipedia.org/wiki/Fork_and_pull_model" target="_blank">https://en.wikipedia.org/wiki/Fork_and_pull_model</a>>
     <a class="_uparrow" href="#bm11"><img src="/assets/img/arrow-up-icon.png"></a>
    </p>
   </li>
  </ol>
 </div>

{% include related.html %}
